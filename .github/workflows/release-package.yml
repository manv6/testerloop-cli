name: Build & Publish Testerloop CLI Package

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - run: npm ci

      - name: Login to GitHub Package Registry
        run: echo "//npm.pkg.github.com/:_authToken=${{secrets.GITHUB_TOKEN}}" >> ~/.npmrc
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Get latest release
        id: release
        uses: actions/github-script@v4
        with:
          script: |
            const releases = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const sortedReleases = releases.data.sort((a, b) => new Date(b.published_at) - new Date(a.published_at));
            const latestRelease = sortedReleases[0];
            console.log(latestRelease.tag_name);
            core.setOutput('tag_name', latestRelease.tag_name);

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: |
            Build & Publish Testerloop CLI Package workflow completed.

            Latest Release: *[ ${{ steps.release.outputs.tag_name }} ]* (https://github.com/${{ github.repository }}/releases/latest)
